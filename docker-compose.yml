services:
  traefik:
    image: traefik:v2.10
    command:
      - --log.level=INFO
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=app-network
      - --entrypoints.web.address=:8081  # Changed from 80 to 8081
      - --entrypoints.dashboard.address=:8082  # Changed from 8080 to 8082
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=dashboard"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:8080/api/version"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  strapi1:
    build:
      context: ./strapi
    env_file: 
      - ./strapi/.env
    environment:
      - NODE_ENV=development
      - DATABASE_CLIENT=sqlite
      - DATABASE_SSL=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./strapi:/app
      - /app/node_modules
      - strapi1_data:/app/public/uploads
      - ./ssl:/app/ssl:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.strapi1.rule=PathPrefix(`/`)"
      - "traefik.http.services.strapi1.loadbalancer.server.port=1337"
    depends_on:
      traefik:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:1337/_health"]
      interval: 10s
      timeout: 5s
      retries: 3

  strapi2:
    build:
      context: ./strapi
    env_file: 
      - ./strapi/.env
    environment:
      - NODE_ENV=development
      - DATABASE_CLIENT=sqlite
      - DATABASE_SSL=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./strapi:/app
      - /app/node_modules
      - strapi2_data:/app/public/uploads
      - ./ssl:/app/ssl:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.strapi2.rule=PathPrefix(`/`)"
      - "traefik.http.services.strapi2.loadbalancer.server.port=1337"
    depends_on:
      traefik:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:1337/_health"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  strapi1_data:
  strapi2_data:
  redis_data: