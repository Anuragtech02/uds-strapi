version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - redis_data:/data

  strapi1:
    build:
      context: ./strapi
    env_file: 
      - ./strapi/.env
    volumes:
      - strapi1_data:/app/public/uploads
      - ./ssl:/app/ssl:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.strapi1.rule=PathPrefix(`/`)"
      - "traefik.http.services.strapi1.loadbalancer.server.port=1337"
    depends_on:
      - traefik
      - redis
    networks:
      - app-network
    restart: unless-stopped

  strapi2:
    build:
      context: ./strapi
    env_file: 
      - ./strapi/.env
    volumes:
      - strapi2_data:/app/public/uploads
      - ./ssl:/app/ssl:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.strapi2.rule=PathPrefix(`/`)"
      - "traefik.http.services.strapi2.loadbalancer.server.port=1337"
    depends_on:
      - traefik
      - redis
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  strapi1_data:
  strapi2_data:
  redis_data: